;----------------------------------------------------------------------------
; General Exception Handler
; Author: Yu Xiaojian
;----------------------------------------------------------------------------

        .SECTION GEEntry,CODE,ALIGN=4
        .EXPORT _GEEntry
        .IMPORT _GEHandler
; 一般异常入口, PC = VBR + 100
_GEEntry:
        ; save processor registers on the stack
        stc.l   ssr, @-r15
        stc.l   spc, @-r15
        sts.l   macl, @-r15
        sts.l   mach, @-r15
        stc.l   gbr, @-r15
        sts.l   pr, @-r15
        mov.l   r0, @-r15
        mov.l   r1, @-r15
        mov.l   r2, @-r15
        mov.l   r3, @-r15
        mov.l   r4, @-r15
        mov.l   r5, @-r15
        mov.l   r6, @-r15
        mov.l   r7, @-r15
        mov.l   r8, @-r15
        mov.l   r9, @-r15
        mov.l   r10, @-r15
        mov.l   r11, @-r15
        mov.l   r12, @-r15
        mov.l   r13, @-r15
        mov.l   r14, @-r15

        mov.l   #_GEHandler, r2
        jsr     @r2
        nop

        ; restore all processor registers from new task's stack
        mov.l   @r15+, r14
        mov.l   @r15+, r13
        mov.l   @r15+, r12
        mov.l   @r15+, r11
        mov.l   @r15+, r10
        mov.l   @r15+, r9
        mov.l   @r15+, r8
        mov.l   @r15+, r7
        mov.l   @r15+, r6
        mov.l   @r15+, r5
        mov.l   @r15+, r4
        mov.l   @r15+, r3
        mov.l   @r15+, r2
        mov.l   @r15+, r1
        mov.l   @r15+, r0
        lds.l   @r15+, pr
        ldc.l   @r15+, gbr
        lds.l   @r15+, mach
        lds.l   @r15+, macl
        ldc.l   @r15+, spc
        ldc.l   @r15+, ssr

        rte
        nop

;----------------------------------------------------------------------------
; General TLB Handler
; Author: Yu Xiaojian
;----------------------------------------------------------------------------
;PC = VBR + 400 
        .SECTION TLBEntry,CODE,ALIGN=4
        .EXPORT _TLBEntry
        .IMPORT _TLBHandler

_TLBEntry:
        ; save processor registers on the stack
        stc.l   ssr, @-r15
        stc.l   spc, @-r15
        sts.l   macl, @-r15
        sts.l   mach, @-r15
        stc.l   gbr, @-r15
        sts.l   pr, @-r15
        mov.l   r0, @-r15
        mov.l   r1, @-r15
        mov.l   r2, @-r15
        mov.l   r3, @-r15
        mov.l   r4, @-r15
        mov.l   r5, @-r15
        mov.l   r6, @-r15
        mov.l   r7, @-r15
        mov.l   r8, @-r15
        mov.l   r9, @-r15
        mov.l   r10, @-r15
        mov.l   r11, @-r15
        mov.l   r12, @-r15
        mov.l   r13, @-r15
        mov.l   r14, @-r15

        mov.l   #_TLBHandler, r2
        jsr     @r2
        nop

        ; restore all processor registers from new task's stack
        mov.l   @r15+, r14
        mov.l   @r15+, r13
        mov.l   @r15+, r12
        mov.l   @r15+, r11
        mov.l   @r15+, r10
        mov.l   @r15+, r9
        mov.l   @r15+, r8
        mov.l   @r15+, r7
        mov.l   @r15+, r6
        mov.l   @r15+, r5
        mov.l   @r15+, r4
        mov.l   @r15+, r3
        mov.l   @r15+, r2
        mov.l   @r15+, r1
        mov.l   @r15+, r0
        lds.l   @r15+, pr
        ldc.l   @r15+, gbr
        lds.l   @r15+, mach
        lds.l   @r15+, macl
        ldc.l   @r15+, spc
        ldc.l   @r15+, ssr

        rte
        nop

;----------------------------------------------------------------------------
; General Interrupt Handler
;----------------------------------------------------------------------------
; 中断入口 PC = VBR + 600 
        .SECTION INTEntry,CODE,ALIGN=4
        .EXPORT _INTEntry
        .IMPORT _INTHandler

_INTEntry:
        ; save processor registers on the stack
        stc.l   ssr, @-r15
        stc.l   spc, @-r15
        sts.l   macl, @-r15
        sts.l   mach, @-r15
        stc.l   gbr, @-r15
        sts.l   pr, @-r15
        mov.l   r0, @-r15
        mov.l   r1, @-r15
        mov.l   r2, @-r15
        mov.l   r3, @-r15
        mov.l   r4, @-r15
        mov.l   r5, @-r15
        mov.l   r6, @-r15
        mov.l   r7, @-r15
        mov.l   r8, @-r15
        mov.l   r9, @-r15
        mov.l   r10, @-r15
        mov.l   r11, @-r15
        mov.l   r12, @-r15
        mov.l   r13, @-r15
        mov.l   r14, @-r15

        mov.l   #_INTHandler, r2
        jsr     @r2
        nop

        ; restore all processor registers from new task's stack
restore:
        mov.l   @r15+, r14
        mov.l   @r15+, r13
        mov.l   @r15+, r12
        mov.l   @r15+, r11
        mov.l   @r15+, r10
        mov.l   @r15+, r9
        mov.l   @r15+, r8
        mov.l   @r15+, r7
        mov.l   @r15+, r6
        mov.l   @r15+, r5
        mov.l   @r15+, r4
        mov.l   @r15+, r3
        mov.l   @r15+, r2
        mov.l   @r15+, r1
        mov.l   @r15+, r0
        lds.l   @r15+, pr
        ldc.l   @r15+, gbr
        lds.l   @r15+, mach
        lds.l   @r15+, macl
        ldc.l   @r15+, spc
        ldc.l   @r15+, ssr

        rte
        nop

        .END


